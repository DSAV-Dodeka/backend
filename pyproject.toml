[tool.poetry]
name = "apiserver"
version = "0.1.2"
description = ""
authors = ["Tip ten Brink <75669206+tiptenbrink@users.noreply.github.com>"]

[tool.poetry.dependencies]
python = ">=3.11, <3.12"
tomli = "2.0.1"
fastapi = "0.95.1"
uvicorn = { extras = ["standard"], version = "^0.21.1" }
asyncpg = "^0.27.0"
gunicorn = "^20.1.0"
redis = "^4.5.1"
PyJWT = "2.6.0"
cryptography = "40.0.2"
pydantic = "^1.10.5"
jinja2 = "^3.1.2"
anyio = "^3.6.1"
opaquepy = "^0.3.4"
sqlalchemy = { extras = ["asyncio"], version = "^2.0.4" }
typing-extensions = "^4.5.0"
psycopg2-binary = "^2.9.2"
regex = "^2023.3.23"


[tool.pytest.ini_options]
asyncio_mode = "strict"

[tool.poetry.scripts]
s-api = "apiserver.dev:run"

[tool.poetry.group.dev.dependencies]
sqlalchemy = { extras = ["mypy", "asyncio"], version = "^2.0.4" }
pytest = "^7.0.1"
pytest-asyncio = "^0.20.3"
pytest-mock = "^3.7.0"
pre-commit = "^2.20.0"
httpx = "^0.23.0"
alembic = "^1.8.0"
coverage = "^6.3.2"
black = "^22.8.0"
mypy = "^1.0.1"
types-redis = "^4.3.21"
# sqlalchemy-stubs = "^0.4"
faker = "^15.3.3"
ruff = "^0.0.259"

[tool.black]
target-version = ['py311']
preview = true

[tool.mypy]
python_version = "3.11"
strict = true
files = ["src"]
plugins = [
    "sqlmypy",
    "pydantic.mypy",
    "sqlalchemy.ext.mypy.plugin"
]
exclude = [
    "src/apiserver/db/migrations/"
]

[[tool.mypy.overrides]]
module = [
    "apiserver.auth.*",
    "apiserver.data.*",
    "apiserver.db.*",
    "apiserver.db.migrations.*",
    "apiserver.kv.*",
    "apiserver.routers.*",
    "apiserver.app",
    "apiserver.dev",
    "apiserver.env",

]
ignore_errors = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]

select = ["F", "PL", "E", "W", "RUF"]
# We ignore too-many-arguments and line length, as black fixes line length for code
ignore = ["PLR0913", "E501"]
ignore-init-module-imports = true

[tool.ruff.per-file-ignores]
"__init__.py" = ["F403"]

[tool.ruff.pycodestyle]
# We allow docs and comments to be long
max-doc-length = 120

