from apiserver.app.error import AppError, ErrorKeys
from apiserver.data.context.app_context import UpdateContext
from apiserver.data.source import Source
from apiserver.data.trs.trs import pop_string
from auth.data.authentication import pop_flow_user
from auth.data.context import LoginContext
from datacontext.context import ctxlize
from store.error import NoDataError


async def verify_delete_account(
    auth_code: str,
    flow_id: str,
    dsrc: Source,
    update_ctx: UpdateContext,
    login_ctx: LoginContext,
) -> str:
    # First we check if the auth code exists. This proves the flow_user logged in with the correct password.
    # Note that such a code can be generated by any user that logs in, so this is not proof that this user wants to
    # delete their account
    try:
        flow_user = await pop_flow_user(login_ctx, dsrc.store, auth_code)
    except NoDataError:
        # logger.debug(e.message)
        reason = "Expired or missing auth code"
        raise AppError(
            err_type=ErrorKeys.CHECK, err_desc=reason, debug_key="empty_flow"
        )
    # We check if the user who authenticated with their password has the same flow_id as the one requested.
    # Note that we have not yet checked if this is a valid flow ID.
    if flow_user.flow_id != flow_id:
        reason = "Flow for auth code does not match requested delete flow!"
        raise AppError(
            err_type=ErrorKeys.UPDATE,
            err_desc=reason,
            debug_key="update_flows_dont_match",
        )

    # If the flow ID exists, then we know that a delete request was indeed initiated.
    stored_user_id = await ctxlize(pop_string)(update_ctx, dsrc, flow_id)
    if stored_user_id is None:
        reason = "Delete request has expired, please try again!"
        # logger.debug(reason + f" {flow_user.user_id}")
        raise AppError(err_type=ErrorKeys.UPDATE, err_desc=reason)

    # If the user ID's are equal, we know that the person who requested the deletion is the same person who
    # logged in. Therefore, we have proved that the delete account initiator has entered their password.
    if flow_user.user_id != stored_user_id:
        reason = "Flow user does not match requested delete flow's user!"
        raise AppError(err_type=ErrorKeys.UPDATE, err_desc=reason)
    if stored_user_id is None:
        reason = "Delete request has expired, please try again!"
        # logger.debug(reason + f" {flow_user.user_id}")
        raise AppError(err_type=ErrorKeys.UPDATE, err_desc=reason)

    return stored_user_id
