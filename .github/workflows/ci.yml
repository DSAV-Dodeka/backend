name: CI

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    # Cache means install is saved in repo cache
    # Increment poetry-0 if new install is necessary
    - name: Load cached Poetry installation
      uses: actions/cache@v2
      with:
        path: ~/.local
        key: poetry-1
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        # .venv is created in project
        virtualenvs-in-project: true
        installer-parallel: true
    # Load .venv directly from cache
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v2
      with:
        path: .venv
        # Key only changes if poetry.lock changes
        key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root
    - name: Install library
      run: poetry install --no-interaction
    - uses: actions/setup-node@v2
      with:
        node-version: '16'
        cache: 'npm'
        cache-dependency-path: ${{ github.workspace }}/authpage/package-lock.json
    - name: Cache authpage
      id: cached-authpage
      uses: actions/cache@v2
      with:
        key: authpage-${{ hashFiles('${{ github.workspace }}/authpage') }}
        path: ${{ github.workspace }}/src/apiserver/resources/static/credentials
    - name: Build credentials
      run: |
        npm install
        npm run build
      working-directory: ${{ github.workspace }}/authpage
    - name: Pytest
      run: poetry run pytest tests/app_test.py
